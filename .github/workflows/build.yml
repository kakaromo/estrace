name: 'build'

on:
  workflow_dispatch: # This is for manual triggers.
    inputs:
      platform:
        description: '빌드 플랫폼'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - macos
          - windows
          - linux
      release_type:
        description: '릴리스 타입'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release



jobs:
  build-tauri:
    # 권한 설정 추가
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:          
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
        
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 리눅스 종속성 설치
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'  # ubuntu-22.04를 ubuntu-latest로 수정
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      # Tauri 앱 빌드
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
         
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.platform }}-${{ matrix.target }}
      #     path: |
      #       src-tauri/target/${{ matrix.target }}/release/bundle/
      #       src-tauri/target/release/bundle/

      # 실행 파일 경로 출력 (디버깅 용도)
      - name: List build output
        if: ${{ github.event.inputs.release_type == 'debug' }}
        shell: bash
        run: |
          echo "===== Build output files ====="
          if [ "${{ matrix.platform }}" = "macos-latest" ]; then
            if [ "${{ matrix.target }}" = "universal-apple-darwin" ]; then
              find src-tauri/target/universal-apple-darwin/release/bundle -type f -name "*.dmg" -o -name "*.app.tar.gz"
            else
              find src-tauri/target/release/bundle -type f -name "*.dmg" -o -name "*.app.tar.gz"
            fi
          elif [ "${{ matrix.platform }}" = "windows-latest" ]; then
            find src-tauri/target/release/bundle -type f -name "*.msi" -o -name "*.exe" | grep -v "node_modules"
          else
            find src-tauri/target/release/bundle -type f -name "*.deb" -o -name "*.AppImage"
          fi
          
      # 특정 플랫폼의 실행 파일만 아티팩트로 업로드
      - name: Upload executables as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-executables
          if-no-files-found: error
          path: |
            # macOS
            if [ "${{ matrix.platform }}" = "macos-latest" ]; then
              if [ "${{ matrix.target }}" = "aarch64-apple-darwin" ]; then
                src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
              else
                src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
              fi            
            fi
            # Windows
            src-tauri/target/release/bundle/nsis/*.exe
            # Linux
            src-tauri/target/release/bundle/appimage/*.AppImage
